events {
    worker_connections 1024;
}

http {
    limit_req_zone $binary_remote_addr zone=remoteaddr_ratelimit_zone:10m rate=1r/s;
    limit_req_zone $http_x_forwarded_for zone=x_forwarded_for_ratelimit_zone:10m rate=1r/s;
    
    upstream backend_server {
        server nginx-backend:8181;
    }
    
    server {
        listen 80;

        set_real_ip_from 127.0.0.1;
        real_ip_header proxy_protocol;
        real_ip_recursive on;

        location /api/login {
            limit_req zone=remoteaddr_ratelimit_zone burst=3 nodelay;
            
            # Proxy to backend nginx
            proxy_pass http://backend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/logout {
            limit_req zone=x_forwarded_for_ratelimit_zone burst=3 nodelay;
            
            # Proxy to backend nginx
            proxy_pass http://backend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint (optional)
        location /health {
            add_header Content-Type text/plain;
            return 200 'Frontend nginx is healthy!';
        }
    }
}
